.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_ndbc_buoy_met_request.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_ndbc_buoy_met_request.py:


NDBC Buoy Meteorological Data Request
=====================================

The NDBC keeps a 45-day recent rolling file for each buoy. This examples shows how to access
the basic meteorological data from a buoy and make a simple plot.


.. code-block:: default


    import matplotlib.pyplot as plt

    from siphon.simplewebservice.ndbc import NDBC







Get a pandas data frame of all of the observations, meteorological data is the default
observation set to query.


.. code-block:: default

    df = NDBC.realtime_observations('41002')
    df.head()







Let's make a simple time series plot to checkout what the data look like.


.. code-block:: default

    fig, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(12, 10))
    ax2b = ax2.twinx()

    # Pressure
    ax1.plot(df['time'], df['pressure'], color='black')
    ax1.set_ylabel('Pressure [hPa]')

    # Wind speed, gust, direction
    ax2.plot(df['time'], df['wind_speed'], color='tab:orange')
    ax2.plot(df['time'], df['wind_gust'], color='tab:olive', linestyle='--')
    ax2b.plot(df['time'], df['wind_direction'], color='tab:blue', linestyle='-')
    ax2.set_ylabel('Wind Speed [m/s]')
    ax2b.set_ylabel('Wind Direction')

    # Water temperature
    ax3.plot(df['time'], df['water_temperature'], color='tab:brown')
    ax3.set_ylabel('Water Temperature [degC]')

    plt.show()



.. image:: /examples/ndbc/images/sphx_glr_buoy_met_request_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/virtualenv/python3.6.7/lib/python3.6/site-packages/pandas/plotting/_matplotlib/converter.py:103: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

    To register the converters:
            >>> from pandas.plotting import register_matplotlib_converters
            >>> register_matplotlib_converters()
      warnings.warn(msg, FutureWarning)




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.689 seconds)


.. _sphx_glr_download_examples_ndbc_buoy_met_request.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: buoy_met_request.py <buoy_met_request.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: buoy_met_request.ipynb <buoy_met_request.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
